name: Go CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.2'  # Set your Go version here

    - name: Install dependencies
      run: go mod tidy

    - name: Run tests
      run: go test ./...

    - name: Build the application
      run: go build -v .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.2'  # Set your Go version here

    - name: Add SSH Host Key
      env:
        SERVER_IP: ${{ vars.SERVER_IP }}
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts

    - name: Decode and Save Private Key
      env:
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
      run: |
        echo "${{ secrets.PRIVATE_KEY }}" | base64 -d > ~/.ssh/private-key.pem
        chmod 600 ~/.ssh/private-key.pem

    - name: Build the application
      run: go build -v .

    - name: Deploy to server
      env:
        SERVER_USER: ${{ vars.SERVER_USER }}
        SERVER_IP: ${{ vars.SERVER_IP }}
        SERVER_DIR: ${{ vars.SERVER_DIR }}
        APP_NAME: ${{vars.APP_NAME}}
        SERVICE_NAME: ${{vars.SERVICE_NAME}}
      run: |
        ssh -i ~/.ssh/private-key.pem ${{ env.SERVER_USER }}@${{ env.SERVER_IP }} "rm -rf ${{env.SERVER_DIR}}/${{env.APP_NAME}}"
        scp -i ~/.ssh/private-key.pem -o StrictHostKeyChecking=no ./${{env.APP_NAME}} ${{ env.SERVER_USER }}@${{ env.SERVER_IP }}:${{ env.SERVER_DIR }}/${{env.APP_NAME}}
        ssh -i ~/.ssh/private-key.pem ${{ env.SERVER_USER }}@${{ env.SERVER_IP }} "sudo systemctl restart ${{env.SERVICE_NAME}}"
